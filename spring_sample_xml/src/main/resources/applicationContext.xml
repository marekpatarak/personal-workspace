<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!--this is needed for use of annotation config, to get @Value annotation work in HibernateCustomer.. to set property value-->
    <context:annotation-config/>

    <context:property-placeholder location="app.properties"/>
    <bean name="customerRepository"
          class="com.pluralsight.repository.HibernateCustomerRepositoryImpl">
        <!--this is used when hardwiring value in xml and using setter in bean to set field value-->
        <!--<property name="dbUsername" value="${dbUsername}"/>-->
    </bean>

    <!--autowire by constructor-->
    <!--scope singleton config in xml-->
    <bean name="customerService"
          class="com.pluralsight.service.CustomerServiceImpl" autowire="constructor" scope="prototype">
        <!--autowire byName looks for setCustomerRepository setter in CustomerServiceImpl class-->
        <!--autowire byType works if exactly one bean of that type exists in container-->

        <!--setter injection-->
        <!--<property name="customerRepository" ref="customerRepository"/>-->

        <!--constructor injection-->
        <!--<constructor-arg index="0" ref="customerRepository"/>-->
    </bean>
</beans>